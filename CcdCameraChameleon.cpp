/*----- PROTECTED REGION ID(CcdCameraChameleon.cpp) ENABLED START -----*/
static const char *RcsId = "$Id:  $";
//=============================================================================
//
// file :        CcdCameraChameleon.cpp
//
// description : C++ source for the CcdCameraChameleon class and its commands.
//               The class is derived from Device. It represents the
//               CORBA servant object which will be accessed from the
//               network. All commands which can be executed on the
//               CcdCameraChameleon are implemented in this file.
//
// project :     
//
// This file is part of Tango device class.
// 
// Tango is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Tango is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Tango.  If not, see <http://www.gnu.org/licenses/>.
// 
// $Author:  $
//
// $Revision:  $
// $Date:  $
//
// $HeadURL:  $
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================


#include <CcdCameraChameleon.h>
#include <CcdCameraChameleonClass.h>
#include <unistd.h>
#include <fstream>

#include <sys/time.h>

using namespace std;

long long mytime()
{
  struct timeval t;

  gettimeofday(&t, NULL);
  long long mt = (long long)t.tv_sec * 1000 + t.tv_usec / 1000;
  return mt;
}

long long t1 = mytime();
long long t2 = t1;

/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon.cpp

/**
 *  CcdCameraChameleon class description:
 *    
 */

//================================================================
//  The following table gives the correspondence
//  between command and method names.
//
//  Command name  |  Method name
//================================================================
//  State         |  Inherited (no method)
//  Status        |  Inherited (no method)
//  play          |  play
//  pause         |  pause
//  setExposure   |  set_exposure
//================================================================

//================================================================
//  Attributes managed are:
//================================================================
//  frameRate         |  Tango::DevDouble	Scalar
//  brightness        |  Tango::DevDouble	Scalar
//  exposure          |  Tango::DevDouble	Scalar
//  gamma             |  Tango::DevDouble	Scalar
//  shutter           |  Tango::DevDouble	Scalar
//  gain              |  Tango::DevDouble	Scalar
//  x                 |  Tango::DevDouble	Scalar
//  y                 |  Tango::DevDouble	Scalar
//  a                 |  Tango::DevDouble	Scalar
//  b                 |  Tango::DevDouble	Scalar
//  frameRateAuto     |  Tango::DevBoolean	Scalar
//  frameRateOnOff    |  Tango::DevBoolean	Scalar
//  exposureAuto      |  Tango::DevBoolean	Scalar
//  exposureOnOff     |  Tango::DevBoolean	Scalar
//  exposureOnePush   |  Tango::DevBoolean	Scalar
//  gammaOnOff        |  Tango::DevBoolean	Scalar
//  gainAuto          |  Tango::DevBoolean	Scalar
//  gainOnePush       |  Tango::DevBoolean	Scalar
//  shutterAuto       |  Tango::DevBoolean	Scalar
//  shutterOnePush    |  Tango::DevBoolean	Scalar
//  temperature       |  Tango::DevDouble	Scalar
//  imageWidth        |  Tango::DevLong	Scalar
//  imageHeight       |  Tango::DevLong	Scalar
//  quality           |  Tango::DevLong	Scalar
//  phi               |  Tango::DevDouble	Scalar
//  scale             |  Tango::DevDouble	Scalar
//  frameRateMin      |  Tango::DevDouble	Scalar
//  frameRateMax      |  Tango::DevDouble	Scalar
//  exposureMin       |  Tango::DevDouble	Scalar
//  exposureMax       |  Tango::DevDouble	Scalar
//  brightnessMin     |  Tango::DevDouble	Scalar
//  brightnessMax     |  Tango::DevDouble	Scalar
//  gammaMin          |  Tango::DevDouble	Scalar
//  gammaMax          |  Tango::DevDouble	Scalar
//  gainMin           |  Tango::DevDouble	Scalar
//  gainMax           |  Tango::DevDouble	Scalar
//  shutterMin        |  Tango::DevDouble	Scalar
//  shutterMax        |  Tango::DevDouble	Scalar
//  imageEncodedJpeg  |  Tango::DevUChar	Spectrum  ( max = 1228800)
//  fullImage         |  Tango::DevUChar	Image  ( max = 1280 x 960)
//================================================================

namespace CcdCameraChameleon_ns
{
/*----- PROTECTED REGION ID(CcdCameraChameleon::namespace_starting) ENABLED START -----*/

//	static initializations

/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::namespace_starting

//--------------------------------------------------------
/**
 *	Method      : CcdCameraChameleon::CcdCameraChameleon()
 *	Description : Constructors for a Tango device
 *                implementing the classCcdCameraChameleon
 */
//--------------------------------------------------------
CcdCameraChameleon::CcdCameraChameleon(Tango::DeviceClass *cl, string &s)
 : TANGO_BASE_CLASS(cl, s.c_str())
{
	/*----- PROTECTED REGION ID(CcdCameraChameleon::constructor_1) ENABLED START -----*/
	init_device();
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::constructor_1
}
//--------------------------------------------------------
CcdCameraChameleon::CcdCameraChameleon(Tango::DeviceClass *cl, const char *s)
 : TANGO_BASE_CLASS(cl, s)
{
	/*----- PROTECTED REGION ID(CcdCameraChameleon::constructor_2) ENABLED START -----*/
	init_device();
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::constructor_2
}
//--------------------------------------------------------
CcdCameraChameleon::CcdCameraChameleon(Tango::DeviceClass *cl, const char *s, const char *d)
 : TANGO_BASE_CLASS(cl, s, d)
{
	/*----- PROTECTED REGION ID(CcdCameraChameleon::constructor_3) ENABLED START -----*/
	init_device();
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::constructor_3
}

//--------------------------------------------------------
/**
 *	Method      : CcdCameraChameleon::delete_device()
 *	Description : will be called at device destruction or at init command
 */
//--------------------------------------------------------
void CcdCameraChameleon::delete_device()
{
	DEBUG_STREAM << "CcdCameraChameleon::delete_device() " << device_name << endl;
	/*----- PROTECTED REGION ID(CcdCameraChameleon::delete_device) ENABLED START -----*/
	
	//	Delete device allocated objects
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::delete_device
	delete[] attr_frameRate_read;
	delete[] attr_brightness_read;
	delete[] attr_exposure_read;
	delete[] attr_gamma_read;
	delete[] attr_shutter_read;
	delete[] attr_gain_read;
	delete[] attr_x_read;
	delete[] attr_y_read;
	delete[] attr_a_read;
	delete[] attr_b_read;
	delete[] attr_frameRateAuto_read;
	delete[] attr_frameRateOnOff_read;
	delete[] attr_exposureAuto_read;
	delete[] attr_exposureOnOff_read;
	delete[] attr_exposureOnePush_read;
	delete[] attr_gammaOnOff_read;
	delete[] attr_gainAuto_read;
	delete[] attr_gainOnePush_read;
	delete[] attr_shutterAuto_read;
	delete[] attr_shutterOnePush_read;
	delete[] attr_temperature_read;
	delete[] attr_imageWidth_read;
	delete[] attr_imageHeight_read;
	delete[] attr_quality_read;
	delete[] attr_phi_read;
	delete[] attr_scale_read;
	delete[] attr_frameRateMin_read;
	delete[] attr_frameRateMax_read;
	delete[] attr_exposureMin_read;
	delete[] attr_exposureMax_read;
	delete[] attr_brightnessMin_read;
	delete[] attr_brightnessMax_read;
	delete[] attr_gammaMin_read;
	delete[] attr_gammaMax_read;
	delete[] attr_gainMin_read;
	delete[] attr_gainMax_read;
	delete[] attr_shutterMin_read;
	delete[] attr_shutterMax_read;
	delete[] attr_imageEncodedJpeg_read;
	delete[] attr_fullImage_read;
}

//--------------------------------------------------------
/**
 *	Method      : CcdCameraChameleon::init_device()
 *	Description : will be called at device initialization.
 */
//--------------------------------------------------------
void CcdCameraChameleon::init_device()
{
	DEBUG_STREAM << "CcdCameraChameleon::init_device() create device " << device_name << endl;
	/*----- PROTECTED REGION ID(CcdCameraChameleon::init_device_before) ENABLED START -----*/
	
	//	Initialization before get_device_property() call
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::init_device_before
	

	//	Get the device properties from database
	get_device_property();
	
	attr_frameRate_read = new Tango::DevDouble[1];
	attr_brightness_read = new Tango::DevDouble[1];
	attr_exposure_read = new Tango::DevDouble[1];
	attr_gamma_read = new Tango::DevDouble[1];
	attr_shutter_read = new Tango::DevDouble[1];
	attr_gain_read = new Tango::DevDouble[1];
	attr_x_read = new Tango::DevDouble[1];
	attr_y_read = new Tango::DevDouble[1];
	attr_a_read = new Tango::DevDouble[1];
	attr_b_read = new Tango::DevDouble[1];
	attr_frameRateAuto_read = new Tango::DevBoolean[1];
	attr_frameRateOnOff_read = new Tango::DevBoolean[1];
	attr_exposureAuto_read = new Tango::DevBoolean[1];
	attr_exposureOnOff_read = new Tango::DevBoolean[1];
	attr_exposureOnePush_read = new Tango::DevBoolean[1];
	attr_gammaOnOff_read = new Tango::DevBoolean[1];
	attr_gainAuto_read = new Tango::DevBoolean[1];
	attr_gainOnePush_read = new Tango::DevBoolean[1];
	attr_shutterAuto_read = new Tango::DevBoolean[1];
	attr_shutterOnePush_read = new Tango::DevBoolean[1];
	attr_temperature_read = new Tango::DevDouble[1];
	attr_imageWidth_read = new Tango::DevLong[1];
	attr_imageHeight_read = new Tango::DevLong[1];
	attr_quality_read = new Tango::DevLong[1];
	attr_phi_read = new Tango::DevDouble[1];
	attr_scale_read = new Tango::DevDouble[1];
	attr_frameRateMin_read = new Tango::DevDouble[1];
	attr_frameRateMax_read = new Tango::DevDouble[1];
	attr_exposureMin_read = new Tango::DevDouble[1];
	attr_exposureMax_read = new Tango::DevDouble[1];
	attr_brightnessMin_read = new Tango::DevDouble[1];
	attr_brightnessMax_read = new Tango::DevDouble[1];
	attr_gammaMin_read = new Tango::DevDouble[1];
	attr_gammaMax_read = new Tango::DevDouble[1];
	attr_gainMin_read = new Tango::DevDouble[1];
	attr_gainMax_read = new Tango::DevDouble[1];
	attr_shutterMin_read = new Tango::DevDouble[1];
	attr_shutterMax_read = new Tango::DevDouble[1];
	attr_imageEncodedJpeg_read = new Tango::DevUChar[1228800];
	attr_fullImage_read = new Tango::DevUChar[1280*960];
	/*----- PROTECTED REGION ID(CcdCameraChameleon::init_device) ENABLED START -----*/
	
	//	Initialize device
	imageSize = 1228800;

	camera = new CameraChameleon(serialNumber[0]);
	camera->setTangoDeviceClass(this);

	if (!camera->getRunStatus()) {
		std::cout << "Failed to initialize device." << std::endl;
		set_state(Tango::FAULT);
		set_status("Camera has not connected");
	}

    set_state(Tango::RUNNING);
    set_status("Camera has connected");


	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::init_device
}

//--------------------------------------------------------
/**
 *	Method      : CcdCameraChameleon::get_device_property()
 *	Description : Read database to initialize property data members.
 */
//--------------------------------------------------------
void CcdCameraChameleon::get_device_property()
{
	/*----- PROTECTED REGION ID(CcdCameraChameleon::get_device_property_before) ENABLED START -----*/
	
	//	Initialize property data members
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::get_device_property_before


	//	Read device properties from database.
	Tango::DbData	dev_prop;
	dev_prop.push_back(Tango::DbDatum("serialNumber"));

	//	is there at least one property to be read ?
	if (dev_prop.size()>0)
	{
		//	Call database and extract values
		if (Tango::Util::instance()->_UseDb==true)
			get_db_device()->get_property(dev_prop);
	
		//	get instance on CcdCameraChameleonClass to get class property
		Tango::DbDatum	def_prop, cl_prop;
		CcdCameraChameleonClass	*ds_class =
			(static_cast<CcdCameraChameleonClass *>(get_device_class()));
		int	i = -1;

		//	Try to initialize serialNumber from class property
		cl_prop = ds_class->get_class_property(dev_prop[++i].name);
		if (cl_prop.is_empty()==false)	cl_prop  >>  serialNumber;
		else {
			//	Try to initialize serialNumber from default device value
			def_prop = ds_class->get_default_device_property(dev_prop[i].name);
			if (def_prop.is_empty()==false)	def_prop  >>  serialNumber;
		}
		//	And try to extract serialNumber value from database
		if (dev_prop[i].is_empty()==false)	dev_prop[i]  >>  serialNumber;

	}

	/*----- PROTECTED REGION ID(CcdCameraChameleon::get_device_property_after) ENABLED START -----*/
	
	//	Check device property data members init
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::get_device_property_after
}

//--------------------------------------------------------
/**
 *	Method      : CcdCameraChameleon::always_executed_hook()
 *	Description : method always executed before any command is executed
 */
//--------------------------------------------------------
void CcdCameraChameleon::always_executed_hook()
{
	DEBUG_STREAM << "CcdCameraChameleon::always_executed_hook()  " << device_name << endl;
	/*----- PROTECTED REGION ID(CcdCameraChameleon::always_executed_hook) ENABLED START -----*/
	
	//	code always executed before all requests
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::always_executed_hook
}

//--------------------------------------------------------
/**
 *	Method      : CcdCameraChameleon::read_attr_hardware()
 *	Description : Hardware acquisition for attributes
 */
//--------------------------------------------------------
void CcdCameraChameleon::read_attr_hardware(TANGO_UNUSED(vector<long> &attr_list))
{
	DEBUG_STREAM << "CcdCameraChameleon::read_attr_hardware(vector<long> &attr_list) entering... " << endl;
	/*----- PROTECTED REGION ID(CcdCameraChameleon::read_attr_hardware) ENABLED START -----*/
	
	//	Add your own code

	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::read_attr_hardware
}
//--------------------------------------------------------
/**
 *	Method      : CcdCameraChameleon::write_attr_hardware()
 *	Description : Hardware writing for attributes
 */
//--------------------------------------------------------
void CcdCameraChameleon::write_attr_hardware(TANGO_UNUSED(vector<long> &attr_list))
{
	DEBUG_STREAM << "CcdCameraChameleon::write_attr_hardware(vector<long> &attr_list) entering... " << endl;
	/*----- PROTECTED REGION ID(CcdCameraChameleon::write_attr_hardware) ENABLED START -----*/
	
	//	Add your own code
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::write_attr_hardware
}

//--------------------------------------------------------
/**
 *	Read attribute frameRate related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::read_frameRate(Tango::Attribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::read_frameRate(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(CcdCameraChameleon::read_frameRate) ENABLED START -----*/
	//	Set the attribute value

	*attr_frameRate_read = camera->getFrameRate();
	attr.set_value(attr_frameRate_read);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::read_frameRate
}
//--------------------------------------------------------
/**
 *	Write attribute frameRate related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::write_frameRate(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::write_frameRate(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevDouble	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(CcdCameraChameleon::write_frameRate) ENABLED START -----*/

    camera->setFrameRate(w_val);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::write_frameRate
}
//--------------------------------------------------------
/**
 *	Read attribute brightness related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::read_brightness(Tango::Attribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::read_brightness(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(CcdCameraChameleon::read_brightness) ENABLED START -----*/
	//	Set the attribute value

	*attr_brightness_read = camera->getBrightness();
	attr.set_value(attr_brightness_read);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::read_brightness
}
//--------------------------------------------------------
/**
 *	Write attribute brightness related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::write_brightness(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::write_brightness(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevDouble	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(CcdCameraChameleon::write_brightness) ENABLED START -----*/
	
	camera->setBrightness(w_val);

	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::write_brightness
}
//--------------------------------------------------------
/**
 *	Read attribute exposure related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::read_exposure(Tango::Attribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::read_exposure(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(CcdCameraChameleon::read_exposure) ENABLED START -----*/
	//	Set the attribute value

	*attr_exposure_read = camera->getExposure();
	attr.set_value(attr_exposure_read);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::read_exposure
}
//--------------------------------------------------------
/**
 *	Write attribute exposure related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::write_exposure(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::write_exposure(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevDouble	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(CcdCameraChameleon::write_exposure) ENABLED START -----*/
	
	camera->setExposure(w_val);

	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::write_exposure
}
//--------------------------------------------------------
/**
 *	Read attribute gamma related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::read_gamma(Tango::Attribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::read_gamma(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(CcdCameraChameleon::read_gamma) ENABLED START -----*/
	//	Set the attribute value

	*attr_gamma_read = camera->getGamma();
	attr.set_value(attr_gamma_read);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::read_gamma
}
//--------------------------------------------------------
/**
 *	Write attribute gamma related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::write_gamma(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::write_gamma(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevDouble	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(CcdCameraChameleon::write_gamma) ENABLED START -----*/
	
	camera->setGamma(w_val);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::write_gamma
}
//--------------------------------------------------------
/**
 *	Read attribute shutter related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::read_shutter(Tango::Attribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::read_shutter(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(CcdCameraChameleon::read_shutter) ENABLED START -----*/
	//	Set the attribute value

	*attr_shutter_read = camera->getShutter();
	attr.set_value(attr_shutter_read);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::read_shutter
}
//--------------------------------------------------------
/**
 *	Write attribute shutter related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::write_shutter(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::write_shutter(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevDouble	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(CcdCameraChameleon::write_shutter) ENABLED START -----*/
	
	camera->setShutter(w_val);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::write_shutter
}
//--------------------------------------------------------
/**
 *	Read attribute gain related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::read_gain(Tango::Attribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::read_gain(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(CcdCameraChameleon::read_gain) ENABLED START -----*/
	//	Set the attribute value

	*attr_gain_read = camera->getGain();
	attr.set_value(attr_gain_read);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::read_gain
}
//--------------------------------------------------------
/**
 *	Write attribute gain related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::write_gain(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::write_gain(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevDouble	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(CcdCameraChameleon::write_gain) ENABLED START -----*/
	
	camera->setGain(w_val);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::write_gain
}
//--------------------------------------------------------
/**
 *	Read attribute x related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::read_x(Tango::Attribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::read_x(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(CcdCameraChameleon::read_x) ENABLED START -----*/
	//	Set the attribute value
	double v = camera->getX();
	*attr_x_read = v;
	attr.set_value(attr_x_read);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::read_x
}
//--------------------------------------------------------
/**
 *	Read attribute y related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::read_y(Tango::Attribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::read_y(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(CcdCameraChameleon::read_y) ENABLED START -----*/
	//	Set the attribute value
	double v = camera->getY();
	*attr_y_read = v;
	attr.set_value(attr_y_read);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::read_y
}
//--------------------------------------------------------
/**
 *	Read attribute a related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::read_a(Tango::Attribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::read_a(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(CcdCameraChameleon::read_a) ENABLED START -----*/
	//	Set the attribute value

	double v = camera->getA();
	*attr_a_read = v;
	attr.set_value(attr_a_read);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::read_a
}
//--------------------------------------------------------
/**
 *	Read attribute b related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::read_b(Tango::Attribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::read_b(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(CcdCameraChameleon::read_b) ENABLED START -----*/
	//	Set the attribute value

	double v = camera->getB();
	*attr_b_read = v;
	attr.set_value(attr_b_read);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::read_b
}
//--------------------------------------------------------
/**
 *	Read attribute frameRateAuto related method
 *	Description: 
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::read_frameRateAuto(Tango::Attribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::read_frameRateAuto(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(CcdCameraChameleon::read_frameRateAuto) ENABLED START -----*/
	//	Set the attribute value
	*attr_frameRateAuto_read = camera->getFrameRateAuto();
	attr.set_value(attr_frameRateAuto_read);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::read_frameRateAuto
}
//--------------------------------------------------------
/**
 *	Write attribute frameRateAuto related method
 *	Description: 
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::write_frameRateAuto(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::write_frameRateAuto(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(CcdCameraChameleon::write_frameRateAuto) ENABLED START -----*/
	
    camera->setFrameRateAuto(w_val);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::write_frameRateAuto
}
//--------------------------------------------------------
/**
 *	Read attribute frameRateOnOff related method
 *	Description: 
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::read_frameRateOnOff(Tango::Attribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::read_frameRateOnOff(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(CcdCameraChameleon::read_frameRateOnOff) ENABLED START -----*/
	//	Set the attribute value

	*attr_frameRateOnOff_read = camera->getFrameRateOnOff();
    attr.set_value(attr_frameRateOnOff_read);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::read_frameRateOnOff
}
//--------------------------------------------------------
/**
 *	Write attribute frameRateOnOff related method
 *	Description: 
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::write_frameRateOnOff(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::write_frameRateOnOff(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(CcdCameraChameleon::write_frameRateOnOff) ENABLED START -----*/
	
    camera->setFrameRateOnOff(w_val);

	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::write_frameRateOnOff
}
//--------------------------------------------------------
/**
 *	Read attribute exposureAuto related method
 *	Description: 
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::read_exposureAuto(Tango::Attribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::read_exposureAuto(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(CcdCameraChameleon::read_exposureAuto) ENABLED START -----*/
	//	Set the attribute value

	*attr_exposureAuto_read = camera->getExposureAuto();
	attr.set_value(attr_exposureAuto_read);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::read_exposureAuto
}
//--------------------------------------------------------
/**
 *	Write attribute exposureAuto related method
 *	Description: 
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::write_exposureAuto(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::write_exposureAuto(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(CcdCameraChameleon::write_exposureAuto) ENABLED START -----*/
	
	camera->setExposureAuto(w_val);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::write_exposureAuto
}
//--------------------------------------------------------
/**
 *	Read attribute exposureOnOff related method
 *	Description: 
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::read_exposureOnOff(Tango::Attribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::read_exposureOnOff(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(CcdCameraChameleon::read_exposureOnOff) ENABLED START -----*/
	//	Set the attribute value

	*attr_exposureOnOff_read = camera->getExposureOnOff();
	attr.set_value(attr_exposureOnOff_read);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::read_exposureOnOff
}
//--------------------------------------------------------
/**
 *	Write attribute exposureOnOff related method
 *	Description: 
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::write_exposureOnOff(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::write_exposureOnOff(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(CcdCameraChameleon::write_exposureOnOff) ENABLED START -----*/
	
	camera->setExposureOnOff(w_val);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::write_exposureOnOff
}
//--------------------------------------------------------
/**
 *	Read attribute exposureOnePush related method
 *	Description: 
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::read_exposureOnePush(Tango::Attribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::read_exposureOnePush(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(CcdCameraChameleon::read_exposureOnePush) ENABLED START -----*/
	//	Set the attribute value

	*attr_exposureOnePush_read = camera->getExposureOnePush();
	attr.set_value(attr_exposureOnePush_read);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::read_exposureOnePush
}
//--------------------------------------------------------
/**
 *	Write attribute exposureOnePush related method
 *	Description: 
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::write_exposureOnePush(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::write_exposureOnePush(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(CcdCameraChameleon::write_exposureOnePush) ENABLED START -----*/
	
	camera->setExposureOnePush(w_val);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::write_exposureOnePush
}
//--------------------------------------------------------
/**
 *	Read attribute gammaOnOff related method
 *	Description: 
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::read_gammaOnOff(Tango::Attribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::read_gammaOnOff(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(CcdCameraChameleon::read_gammaOnOff) ENABLED START -----*/
	//	Set the attribute value

	*attr_gammaOnOff_read = camera->getGammaOnOff();
	attr.set_value(attr_gammaOnOff_read);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::read_gammaOnOff
}
//--------------------------------------------------------
/**
 *	Write attribute gammaOnOff related method
 *	Description: 
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::write_gammaOnOff(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::write_gammaOnOff(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(CcdCameraChameleon::write_gammaOnOff) ENABLED START -----*/
	
	camera->setGammaOnOff(w_val);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::write_gammaOnOff
}
//--------------------------------------------------------
/**
 *	Read attribute gainAuto related method
 *	Description: 
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::read_gainAuto(Tango::Attribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::read_gainAuto(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(CcdCameraChameleon::read_gainAuto) ENABLED START -----*/
	//	Set the attribute value

	*attr_gainAuto_read = camera->getGainAuto();
	attr.set_value(attr_gainAuto_read);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::read_gainAuto
}
//--------------------------------------------------------
/**
 *	Write attribute gainAuto related method
 *	Description: 
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::write_gainAuto(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::write_gainAuto(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(CcdCameraChameleon::write_gainAuto) ENABLED START -----*/
	
	camera->setGainAuto(w_val);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::write_gainAuto
}
//--------------------------------------------------------
/**
 *	Read attribute gainOnePush related method
 *	Description: 
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::read_gainOnePush(Tango::Attribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::read_gainOnePush(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(CcdCameraChameleon::read_gainOnePush) ENABLED START -----*/
	//	Set the attribute value

	*attr_gainOnePush_read = camera->getGainOnePush();
	attr.set_value(attr_gainOnePush_read);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::read_gainOnePush
}
//--------------------------------------------------------
/**
 *	Write attribute gainOnePush related method
 *	Description: 
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::write_gainOnePush(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::write_gainOnePush(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(CcdCameraChameleon::write_gainOnePush) ENABLED START -----*/
	
	camera->setGainOnePush(w_val);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::write_gainOnePush
}
//--------------------------------------------------------
/**
 *	Read attribute shutterAuto related method
 *	Description: 
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::read_shutterAuto(Tango::Attribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::read_shutterAuto(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(CcdCameraChameleon::read_shutterAuto) ENABLED START -----*/
	//	Set the attribute value

	*attr_shutterAuto_read = camera->getShutterAuto();
	attr.set_value(attr_shutterAuto_read);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::read_shutterAuto
}
//--------------------------------------------------------
/**
 *	Write attribute shutterAuto related method
 *	Description: 
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::write_shutterAuto(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::write_shutterAuto(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(CcdCameraChameleon::write_shutterAuto) ENABLED START -----*/
	
	camera->setShutterAuto(w_val);

	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::write_shutterAuto
}
//--------------------------------------------------------
/**
 *	Read attribute shutterOnePush related method
 *	Description: 
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::read_shutterOnePush(Tango::Attribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::read_shutterOnePush(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(CcdCameraChameleon::read_shutterOnePush) ENABLED START -----*/
	//	Set the attribute value

	*attr_shutterOnePush_read = camera->getShutterOnePush();
	attr.set_value(attr_shutterOnePush_read);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::read_shutterOnePush
}
//--------------------------------------------------------
/**
 *	Write attribute shutterOnePush related method
 *	Description: 
 *
 *	Data type:	Tango::DevBoolean
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::write_shutterOnePush(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::write_shutterOnePush(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevBoolean	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(CcdCameraChameleon::write_shutterOnePush) ENABLED START -----*/
	
	camera->setShutterOnePush(w_val);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::write_shutterOnePush
}
//--------------------------------------------------------
/**
 *	Read attribute temperature related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::read_temperature(Tango::Attribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::read_temperature(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(CcdCameraChameleon::read_temperature) ENABLED START -----*/
	//	Set the attribute value

	*attr_temperature_read = camera->getTemperature();
	attr.set_value(attr_temperature_read);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::read_temperature
}
//--------------------------------------------------------
/**
 *	Read attribute imageWidth related method
 *	Description: 
 *
 *	Data type:	Tango::DevLong
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::read_imageWidth(Tango::Attribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::read_imageWidth(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(CcdCameraChameleon::read_imageWidth) ENABLED START -----*/
	//	Set the attribute value

    *attr_imageWidth_read = camera->getImageWidth();
	attr.set_value(attr_imageWidth_read);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::read_imageWidth
}
//--------------------------------------------------------
/**
 *	Read attribute imageHeight related method
 *	Description: 
 *
 *	Data type:	Tango::DevLong
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::read_imageHeight(Tango::Attribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::read_imageHeight(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(CcdCameraChameleon::read_imageHeight) ENABLED START -----*/
	//	Set the attribute value

    *attr_imageHeight_read = camera->getImageHeight();
	attr.set_value(attr_imageHeight_read);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::read_imageHeight
}
//--------------------------------------------------------
/**
 *	Read attribute quality related method
 *	Description: 
 *
 *	Data type:	Tango::DevLong
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::read_quality(Tango::Attribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::read_quality(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(CcdCameraChameleon::read_quality) ENABLED START -----*/
	//	Set the attribute value

    *attr_quality_read = camera->getQuality();
    attr.set_value(attr_quality_read);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::read_quality
}
//--------------------------------------------------------
/**
 *	Write attribute quality related method
 *	Description: 
 *
 *	Data type:	Tango::DevLong
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::write_quality(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::write_quality(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevLong	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(CcdCameraChameleon::write_quality) ENABLED START -----*/
	
    camera->setQuality(w_val);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::write_quality
}
//--------------------------------------------------------
/**
 *	Read attribute phi related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::read_phi(Tango::Attribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::read_phi(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(CcdCameraChameleon::read_phi) ENABLED START -----*/
	//	Set the attribute value

	double v = camera->getPhi();
	*attr_phi_read = v;
	attr.set_value(attr_phi_read);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::read_phi
}
//--------------------------------------------------------
/**
 *	Read attribute scale related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::read_scale(Tango::Attribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::read_scale(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(CcdCameraChameleon::read_scale) ENABLED START -----*/
	//	Set the attribute value

	*attr_scale_read = camera->getScale();
	attr.set_value(attr_scale_read);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::read_scale
}
//--------------------------------------------------------
/**
 *	Write attribute scale related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::write_scale(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::write_scale(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevDouble	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(CcdCameraChameleon::write_scale) ENABLED START -----*/
	
	camera->setScale(w_val);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::write_scale
}
//--------------------------------------------------------
/**
 *	Read attribute frameRateMin related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::read_frameRateMin(Tango::Attribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::read_frameRateMin(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(CcdCameraChameleon::read_frameRateMin) ENABLED START -----*/
	//	Set the attribute value

	*attr_frameRateMin_read = camera->getFrameRateMin();

	attr.set_value(attr_frameRateMin_read);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::read_frameRateMin
}
//--------------------------------------------------------
/**
 *	Read attribute frameRateMax related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::read_frameRateMax(Tango::Attribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::read_frameRateMax(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(CcdCameraChameleon::read_frameRateMax) ENABLED START -----*/
	//	Set the attribute value

	*attr_frameRateMax_read = camera->getFrameRateMax();

	attr.set_value(attr_frameRateMax_read);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::read_frameRateMax
}
//--------------------------------------------------------
/**
 *	Read attribute exposureMin related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::read_exposureMin(Tango::Attribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::read_exposureMin(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(CcdCameraChameleon::read_exposureMin) ENABLED START -----*/
	//	Set the attribute value

	*attr_exposureMin_read = camera->getExposureMin();

	attr.set_value(attr_exposureMin_read);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::read_exposureMin
}
//--------------------------------------------------------
/**
 *	Read attribute exposureMax related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::read_exposureMax(Tango::Attribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::read_exposureMax(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(CcdCameraChameleon::read_exposureMax) ENABLED START -----*/
	//	Set the attribute value

	*attr_exposureMax_read = camera->getExposureMax();

	attr.set_value(attr_exposureMax_read);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::read_exposureMax
}
//--------------------------------------------------------
/**
 *	Read attribute brightnessMin related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::read_brightnessMin(Tango::Attribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::read_brightnessMin(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(CcdCameraChameleon::read_brightnessMin) ENABLED START -----*/
	//	Set the attribute value

	*attr_brightnessMin_read = camera->getBrightnessMin();

	attr.set_value(attr_brightnessMin_read);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::read_brightnessMin
}
//--------------------------------------------------------
/**
 *	Read attribute brightnessMax related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::read_brightnessMax(Tango::Attribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::read_brightnessMax(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(CcdCameraChameleon::read_brightnessMax) ENABLED START -----*/
	//	Set the attribute value

	*attr_brightnessMax_read = camera->getBrightnessMax();

	attr.set_value(attr_brightnessMax_read);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::read_brightnessMax
}
//--------------------------------------------------------
/**
 *	Read attribute gammaMin related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::read_gammaMin(Tango::Attribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::read_gammaMin(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(CcdCameraChameleon::read_gammaMin) ENABLED START -----*/
	//	Set the attribute value

	*attr_gammaMin_read = camera->getGammaMin();

	attr.set_value(attr_gammaMin_read);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::read_gammaMin
}
//--------------------------------------------------------
/**
 *	Read attribute gammaMax related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::read_gammaMax(Tango::Attribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::read_gammaMax(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(CcdCameraChameleon::read_gammaMax) ENABLED START -----*/
	//	Set the attribute value

	*attr_gammaMax_read = camera->getGammaMax();

	attr.set_value(attr_gammaMax_read);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::read_gammaMax
}
//--------------------------------------------------------
/**
 *	Read attribute gainMin related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::read_gainMin(Tango::Attribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::read_gainMin(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(CcdCameraChameleon::read_gainMin) ENABLED START -----*/
	//	Set the attribute value

	*attr_gainMin_read = camera->getGainMin();

	attr.set_value(attr_gainMin_read);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::read_gainMin
}
//--------------------------------------------------------
/**
 *	Read attribute gainMax related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::read_gainMax(Tango::Attribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::read_gainMax(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(CcdCameraChameleon::read_gainMax) ENABLED START -----*/
	//	Set the attribute value

	*attr_gainMax_read = camera->getGainMax();

	attr.set_value(attr_gainMax_read);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::read_gainMax
}
//--------------------------------------------------------
/**
 *	Read attribute shutterMin related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::read_shutterMin(Tango::Attribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::read_shutterMin(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(CcdCameraChameleon::read_shutterMin) ENABLED START -----*/
	//	Set the attribute value

	*attr_shutterMin_read = camera->getShutterMin();

	attr.set_value(attr_shutterMin_read);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::read_shutterMin
}
//--------------------------------------------------------
/**
 *	Read attribute shutterMax related method
 *	Description: 
 *
 *	Data type:	Tango::DevDouble
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void CcdCameraChameleon::read_shutterMax(Tango::Attribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::read_shutterMax(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(CcdCameraChameleon::read_shutterMax) ENABLED START -----*/
	//	Set the attribute value

	*attr_shutterMax_read = camera->getShutterMax();

	attr.set_value(attr_shutterMax_read);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::read_shutterMax
}
//--------------------------------------------------------
/**
 *	Read attribute imageEncodedJpeg related method
 *	Description: 
 *
 *	Data type:	Tango::DevUChar
 *	Attr type:	Spectrum max = 1228800
 */
//--------------------------------------------------------
void CcdCameraChameleon::read_imageEncodedJpeg(Tango::Attribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::read_imageEncodedJpeg(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(CcdCameraChameleon::read_imageEncodedJpeg) ENABLED START -----*/
	//	Set the attribute value

    unsigned char* encodedImage;
    int size;
    camera->getImage(&encodedImage, &size);

    attr.set_value(encodedImage, size, 0, true);

	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::read_imageEncodedJpeg
}
//--------------------------------------------------------
/**
 *	Read attribute fullImage related method
 *	Description: 
 *
 *	Data type:	Tango::DevUChar
 *	Attr type:	Image max = 1280 x 960
 */
//--------------------------------------------------------
void CcdCameraChameleon::read_fullImage(Tango::Attribute &attr)
{
	DEBUG_STREAM << "CcdCameraChameleon::read_fullImage(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(CcdCameraChameleon::read_fullImage) ENABLED START -----*/
	//	Set the attribute value

	int size = 1228800;
	int width = 0, height = 0;
	camera->getBigImage(attr_fullImage_read, size, &width, &height);

	attr.set_value(attr_fullImage_read, width, height);
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::read_fullImage
}

//--------------------------------------------------------
/**
 *	Method      : CcdCameraChameleon::add_dynamic_attributes()
 *	Description : Create the dynamic attributes if any
 *                for specified device.
 */
//--------------------------------------------------------
void CcdCameraChameleon::add_dynamic_attributes()
{
	/*----- PROTECTED REGION ID(CcdCameraChameleon::add_dynamic_attributes) ENABLED START -----*/
	
	//	Add your own code to create and add dynamic attributes if any
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::add_dynamic_attributes
}

//--------------------------------------------------------
/**
 *	Command play related method
 *	Description: 
 *
 */
//--------------------------------------------------------
void CcdCameraChameleon::play()
{
	DEBUG_STREAM << "CcdCameraChameleon::play()  - " << device_name << endl;
	/*----- PROTECTED REGION ID(CcdCameraChameleon::play) ENABLED START -----*/
	
	//	Add your own code

    camera->play();
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::play
}
//--------------------------------------------------------
/**
 *	Command pause related method
 *	Description: 
 *
 */
//--------------------------------------------------------
void CcdCameraChameleon::pause()
{
	DEBUG_STREAM << "CcdCameraChameleon::pause()  - " << device_name << endl;
	/*----- PROTECTED REGION ID(CcdCameraChameleon::pause) ENABLED START -----*/
	
	//	Add your own code

    camera->pause();
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::pause
}
//--------------------------------------------------------
/**
 *	Command setExposure related method
 *	Description: 
 *
 */
//--------------------------------------------------------
void CcdCameraChameleon::set_exposure()
{
	DEBUG_STREAM << "CcdCameraChameleon::setExposure()  - " << device_name << endl;
	/*----- PROTECTED REGION ID(CcdCameraChameleon::set_exposure) ENABLED START -----*/
	
	//	Add your own code

	camera->setAutoExposure();
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::set_exposure
}
//--------------------------------------------------------
/**
 *	Method      : CcdCameraChameleon::add_dynamic_commands()
 *	Description : Create the dynamic commands if any
 *                for specified device.
 */
//--------------------------------------------------------
void CcdCameraChameleon::add_dynamic_commands()
{
	/*----- PROTECTED REGION ID(CcdCameraChameleon::add_dynamic_commands) ENABLED START -----*/
	
	//	Add your own code to create and add dynamic commands if any
	
	/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::add_dynamic_commands
}

/*----- PROTECTED REGION ID(CcdCameraChameleon::namespace_ending) ENABLED START -----*/

/*----- PROTECTED REGION END -----*/	//	CcdCameraChameleon::namespace_ending
} //	namespace
